ARG DOTNET_VERSION=8.0

FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_VERSION}-bookworm-slim

# Docker build arguments
ARG SOURCE_DIR=/jellyfin
ARG ARTIFACT_DIR=/dist

# Docker run environment
ENV SOURCE_DIR=/jellyfin
ENV ARTIFACT_DIR=/dist
ENV DEB_BUILD_OPTIONS=noddebs
ENV ARCH=amd64
ENV IS_DOCKER=YES

# Prepare Debian build environment
RUN apt-get update -yqq \
 && apt-get install --no-install-recommends -yqq \
    debhelper gnupg devscripts build-essential mmv

# Prepare the cross-toolchain
RUN dpkg --add-architecture armhf \
 && apt-get update -yqq \
 && apt-get install --no-install-recommends -yqq cross-gcc-dev \
 && TARGET_LIST="armhf" cross-gcc-gensource 12 \
 && cd cross-gcc-packages-amd64/cross-gcc-12-armhf \
 && apt-get install --no-install-recommends -yqq \
    gcc-12-source libstdc++-12-dev-armhf-cross \
    binutils-aarch64-linux-gnu bison flex libtool gdb \
    sharutils netbase libmpc-dev libmpfr-dev libgmp-dev \
    systemtap-sdt-dev autogen expect chrpath zlib1g-dev \
    zip binutils-arm-linux-gnueabihf libc6-dev:armhf \
    linux-libc-dev:armhf libgcc1:armhf libcurl4-openssl-dev:armhf \
    libfontconfig1-dev:armhf libfreetype6-dev:armhf libssl-dev:armhf \
    liblttng-ust1:armhf libstdc++-12-dev:armhf \
 && apt-get clean autoclean -yqq \
 && apt-get autoremove -yqq \
 && rm -rf /var/lib/apt/lists/*

# Link to build script
RUN ln -sf ${SOURCE_DIR}/deployment/build.debian.armhf /build.sh

VOLUME ${SOURCE_DIR}/

VOLUME ${ARTIFACT_DIR}/

ENTRYPOINT ["/build.sh"]
